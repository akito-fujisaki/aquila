require: rubocop-rails
Rails:
  Enabled: true

Layout/LineLength:
  Max: 100

AsciiComments:
  Enabled: false

Layout/FirstArrayElementLineBreak:
  Enabled: true

Layout/FirstHashElementLineBreak:
  Enabled: true

Layout/FirstMethodArgumentLineBreak:
  Enabled: true

Layout/MultilineArrayLineBreaks:
  Enabled: true

Layout/MultilineHashKeyLineBreaks:
  Enabled: true

Layout/MultilineMethodArgumentLineBreaks:
  Enabled: true

Layout/MultilineArrayBraceLayout:
  EnforcedStyle: new_line

Layout/MultilineHashBraceLayout:
  EnforcedStyle: new_line

Layout/MultilineMethodCallBraceLayout:
  EnforcedStyle: new_line

# 松田技術顧問との会話で、現実的でないとの結論
Metrics/MethodLength:
  Enabled: false

# 松田技術顧問との会話で、現実的でないとの結論
Metrics/ClassLength:
  Enabled: false

# 松田技術顧問との会話で、現実的でないとの結論
Metrics/ModuleLength:
  Enabled: false

# 根拠のない決め打ち数字
Metrics/AbcSize:
  Max: 30

Metrics/CyclomaticComplexity:
  Max: 10

Metrics/BlockLength:
  Exclude:
    - 'lib/tasks/customer_delete_request_transfer.rake'
    - 'test/**/*'

# _で始まる変数名は特に禁止していないため
Lint/UnderscorePrefixedVariableName:
  Enabled: false

# eachの中でreturnなど各ケースがあると判断
Lint/NonLocalExitFromIterator:
  Enabled: false

Lint/RaiseException:
  Enabled: false

Lint/StructNewOverride:
  Enabled: false

Rails/InverseOf:
  Enabled: false

Rails/SkipsModelValidations:
  Enabled: false

# ドキュメント用のコメントを付けないといけないというルールは無いため
Style/Documentation:
  Enabled: false

# #14 にて議論中
Style/RedundantReturn:
  Enabled: false

# 戻り値の有無で決めるスタイルにしているため
Style/BlockDelimiters:
  Enabled: false

Style/HashEachMethods:
  Enabled: false

Style/HashTransformKeys:
  Enabled: false

Style/HashTransformValues:
  Enabled: false

# &.(ぼっち演算子/lonely operator)は利用禁止のルールのため
Style/SafeNavigation:
  Enabled: false

Rails/Output:
  Exclude:
    - 'lib/first_client_synchronizing/client_customers_cleaner.rb'

AllCops:
  NewCops: enable
  Exclude:
    - 'vendor/**/*'
    - 'db/**/*'
    - 'bin/**/*'
    - 'node_modules/**/*'
    - 'public/**/*'
    - 'tmp/**/*'
    - 'log/**/*'
    - 'config/**/*'
    - 'test/channels/**/*'
    - 'test/test_helper.rb'
